{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "OAuth2 Client Registration",
        "description": "OAuth2 Client Registration microservices endpoints.",
        "contact": {
            "email": "stevehu@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "oauth2.networknt.com",
    "schemes": [
        "http",
        "https"
    ],
    "basePath": "/v1",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/oauth2/client": {
            "post": {
                "description": "Return a client object",
                "operationId": "createClient",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    }
                },
                "security": [
                    {
                        "client_auth": [
                            "client.w"
                        ]
                    }
                ]
            },
            "put": {
                "description": "Return the updated client",
                "operationId": "updateClient",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    }
                },
                "security": [
                    {
                        "client_auth": [
                            "client.w"
                        ]
                    }
                ]
            },
            "get": {
                "description": "Return all clients",
                "operationId": "getAllClient",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Client"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "client_auth": [
                            "client.r"
                        ]
                    }
                ]
            }
        },
        "/oauth2/client/{clientId}": {
            "delete": {
                "description": "Delete a client by Id",
                "operationId": "deleteClient",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "Client Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid clientId supplied"
                    },
                    "404": {
                        "description": "Client not found"
                    }
                },
                "security": [
                    {
                        "client_auth": [
                            "client.w"
                        ]
                    }
                ]
            },
            "get": {
                "description": "Get a client by Id",
                "operationId": "getClient",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "Client Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    },
                    "400": {
                        "description": "Invalid clientId supplied"
                    },
                    "404": {
                        "description": "Client not found"
                    }
                },
                "security": [
                    {
                        "client_auth": [
                            "client.r",
                            "client.w"
                        ]
                    }
                ]
            }
        }
    },
    "securityDefinitions": {
        "client_auth": {
            "type": "oauth2",
            "authorizationUrl": "http://localhost:8888/oauth2/code",
            "flow": "implicit",
            "scopes": {
                "client.w": "write client",
                "client.r": "read client"
            }
        }
    },
    "definitions": {
        "Client": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "a unique client id"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "client secret"
                },
                "clientName": {
                    "type": "string",
                    "description": "client name"
                },
                "ownerName": {
                    "type": "string",
                    "description": "client owner name"
                },
                "ownerEmail": {
                    "type": "string",
                    "description": "client owner email address"
                },
                "scopes": {
                    "type": "string",
                    "description": "client scopes separated by space"
                }
            }
        }
    }
}